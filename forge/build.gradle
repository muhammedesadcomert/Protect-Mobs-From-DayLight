plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
}

minecraft {
    mappings channel: 'official', version: "${project.minecraft_version}"

    runs {
        client {
            workingDirectory project.file('run')
            args "-mixin.config=${archives_base_name}-common.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'forge'
            mods {
                protectmobsfromdaylight {
                    source sourceSets.main
                    source project(":common").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            args "-mixin.config=${archives_base_name}-common.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'forge'
            mods {
                protectmobsfromdaylight {
                    source sourceSets.main
                    source project(":common").sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.forge_version}"
    implementation project(":common")
}

def replaceResources = tasks.register("replaceResources", Copy) {
    outputs.upToDateWhen { false }

    from(sourceSets.main.resources) {
        include 'META-INF/mods.toml'
        expand 'version': version,
                'forge_version_range': forge_version_range,
                'forge_mc_version_range': forge_mc_version_range,
                'mod_id': mod_id,
                'mod_name': mod_name,
                'mod_description': mod_description,
                'mod_authors': mod_authors,
                'mod_license': mod_license
    }

    into "$buildDir/resources/main/"
}

processResources {
    from project(":common").sourceSets.main.resources
    duplicatesStrategy(DuplicatesStrategy.FAIL)
    configure { finalizedBy(replaceResources) }
}